; ÓTURMÄÏÓ; ÊUL 23 2017, ÉNITIAL VERSION (INCLUDING LOAD PROGRAM, READING ERROR CHANNEL); ÊUL 24 2017, ÒEADING DIRECTORY, SENDING A COMMAND VIA THE COMMAND CHANNEL; ÊUL 25 2017, ÃHANGING DEFAULT DRIVE;; ÓUPPORTED COMMANDS:;; /"PROGRAM"    ÌOAD BASIC PROGRAM; <-"PROGRAM"    ÌOAD AND RUN BASIC PROGRAM (*); %"PROGRAM"    ÌOAD MACHINE LANGUAGE PROGRAM;; @        ÒEAD ERROR CHANNEL; @$        ÒEAD DIRECTORY; @#X        ÃHANGE DEFAULT DRIVE X=8-32; @Ñ        ÕNINSTALL ÓTURMÄÏÓ;; @"Î:DISK NAME,IDENTIFIER"    ÆORMAT A DISK (ÎEW); @"Ó:FILE"            ÄELETE A FILE (ÓCRATCH); @"Ò:NEW NAME=OLD NAME"    ÒENAME A FILE; @"É"                ÉNITIALIZE (I.E. RESET) THE DRIVE; @"Ö"                ÖALIDATE THE DISK (I.E. DISK DOCTOR); @"Ã:NEW FILE=OLD FILE"    ÃOPY A FILE; @"ÃÄ DIRECTORY"        ÃHANGE A DIRECTORY (FOR EXAMPLE SUPPORTED BY SD2IEC); @"ÃÄ <-"            ÃHANGE TO THE ABOVE DIRECTORY (SD2IEC) (*);;                (*) = <- MEANS LEFT ARROW; KERNAL ROUTINESCHKIN    =    $FFC6CHKOUT    =    $FFC9CHRIN    =    $FFCFCHROUT    =    $FFD2CLOSE    =    $FFC3CLRCHN    =    $FFCCLOAD    =    $FFD5OPEN    =    $FFC0READST    =    $FFB7SETLFS    =    $FFBASETNAM    =    $FFBDBASIC    =    $2BVARIABLES =    $2DCHRGET    =    $73TEXTPTR    =    $7AENDOFLOAD =    $AEDEVNBR    =    $BANDX    =    $C6    ; NUMBER OF CHARS IN KEYBOARD BUFFERBUFFER    =    $200KEYBUFFER =    $277WARM    =    $302IGONE    =    $308GONEPTR    =    $3FCSAVEPTR    =    $3FETAPE    =    $33C    ; TAPE BUFFERDEVICE    =    TAPESECONDARY =    TAPE+1RUN    =    TAPE+2LENGTH    =    TAPE+3BIN    =    TAPE+4BCD    =    TAPE+6PARAM    =    TAPE+9; MACROS.IF 0    ÍÁÃ    LBEQ    DC.B    $D0,$3    ; BNE +3    JMP    {1}    ÅÎÄÍ.ENDIF.MAC    LBEQ    .BYTE    $D0,$3    ; BNE +3    JMP    \1    .ENDMAC    .ORG    $C000-2    .WORD    $C000; INSTALL DOS COMMANDS;; ADD OWN ROUTINE TO IGONE VECTOR; IGONE WILL POINT TO OWN ROUTINE;; AFTER OUR OWN ROUTINE WE WILL JUMP; TO GONE+3    LDA    IGONE    STA    GONEPTR    STA    SAVEPTR    LDA    IGONE+1    STA    GONEPTR+1    STA    SAVEPTR+1    CLC    LDA    #3    ADC    GONEPTR    STA    GONEPTR    LDA    #0    ADC    GONEPTR+1    STA    GONEPTR+1    LDA    #<CHECKÃOMMAND    STA    IGONE    LDA    #>CHECKÃOMMAND    STA    IGONE+1    ; PRINT TITLE STRING    LDX    #<TITLE    LDY    #>TITLE    JSR    PRINTÓTRING        ; SET DEFAULT DEVICE NUMBER    LDA    DEVNBR    BNE    INSTALL1    LDA    #8INSTALL1    STA    DEVICE    RTS; CHECK COMMANDSCHECKÃOMMAND    JSR    CHRGET    PHP    CMP    #"@"    LBEQ    ATCOMMAND    CMP    #$AD    ; / BASIC TOKEN     LBEQ    LOADÂASIC    CMP    #"%"    LBEQ    LOADÍÌ    CMP    #$5F    ; LEFT ARROW    LBEQ    RUNÂASIC    PLP    JMP    (GONEPTR); PROCESS @ COMMANDATCOMMAND    PLP    JSR    PARSEÓTRING    LDA    LENGTH    LBEQ    READÅRROR    LDA    PARAM    CMP    #"Q"    BEQ    QUIT    CMP    #"$"    LBEQ    READÄIR    CMP    #"#"    LBEQ    CHANGEÄRIVE    ; JUMP TO SEND COMMAND ROUTINE IF IT IS NOT @, @$, OR @# COMMAND    JMP    SENDÃOMMAND; PARSE PARAMETER STRING;; ROUTINE SUPRESSES LEADING SPACE AND " CHARACTERS; ROUTINE SUPRESSES TRAILING " CHARACTERPARSEÓTRING    JSR    @NEXTÃHAR    ; SUPRESS SPACES    CMP    #" "    BEQ    PARSEÓTRING    LDX    #0    CMP    #'"'    BNE    @PARSEÓTRING3@PARSEÓTRING2    JSR    @NEXTÃHAR    ; SUPRESS "@PARSEÓTRING3    CMP    #'"'    BEQ    @PARSEÅXIT1    CMP    #0    BEQ    @PARSEÅXIT2    STA    PARAM,X    INX    SEC    BCS    @PARSEÓTRING2@PARSEÅXIT1    JSR    @NEXTÃHAR    ; SUPRESS "@PARSEÅXIT2    STX    LENGTH;DEBUG;    LDX    #0;    LDY    LENGTH;    BEQ    PARSEÅXIT3;DEBUGÐRINT;    LDA    PARAM,X;    JSR    CHROUT;    INX;    DEY;    BNE    DEBUGÐRINT;    LDA    #13;    JSR    CHROUT;PARSEÅXIT3    RTS; GET NEXT CHARACTER IN PARAMETER STRING@NEXTÃHAR    LDY    #0    INC    TEXTPTR    BNE    @NEXTÃHAR2    INC    TEXTPTR+2@NEXTÃHAR2    LDA    (TEXTPTR),Y    RTS; REMOVE DOS COMMANDS FROM BASIC INTERPRETERQUIT    LDA    SAVEPTR    STA    IGONE    LDA    SAVEPTR+1    STA    IGONE+1    LDA    #0    JMP    (GONEPTR); LOAD AND RUN BASIC PROGRAMRUNÂASIC    LDA    #$80    STA    RUN    SEC    BCS    LOADÂASIC2; LOAD BASIC PROGRAMLOADÂASIC    LDA    #0    STA    RUNLOADÂASIC2    LDX    #0    STX    SECONDARY    SEC    BCS    LOADÆILE; LOAD MACHINE LANGUAGE PROGRAMLOADÍÌ    LDA    #0    STA    RUN    LDX    #1    STX    SECONDARY; GENERAL LOAD FILE ROUTINELOADÆILE    PLP    JSR    PARSEÓTRING    LDA    #1    ; LOGICAL FILE NUMBER    LDX    DEVICE    LDY    SECONDARY    JSR    SETLFS    LDX    #<PARAM    LDY    #>PARAM    LDA    LENGTH    JSR    SETNAM    LDA    #0    ; LOAD    LDX    BASIC    LDY    BASIC+1    JSR    LOAD    ; SET START OF VARIABLES (NEEDED IN CASE OF BASIC PROGRAM)    STX    VARIABLES    STY    VARIABLES+1    ; PRINT READY AFTER LOADING    LDX    #<READYTEXT    LDY    #>READYTEXT    JSR    PRINTÓTRING    ; INSERT RUN COMMAND TO THE KEYBOARD BUFFER IF NEEDED    LDA    RUN    BEQ    LOADÆILE2    LDX    #0@COPYÒUNÃMD    LDA    RUNTEXT,X    STA    KEYBUFFER,X    INX    CMP    #13    BNE    @COPYÒUNÃMD    STX    NDXLOADÆILE2    JMP    (WARM)    ; BASIC WARM START; OPEN ERROR CHANNEL;OPENÃOMMANDÃHANNEL    LDA    #15    ; LOGICAL FILE    LDX    DEVICE    ; DEVICE NUMBER    LDY    #15    ; COMMAND CHANNEL    JSR    SETLFS    LDA    #0    ; LENGTH OF NAME    JSR    SETNAM    JSR    OPEN    BCS    OPENÃOMMANDÅXIT    RTSOPENÃOMMANDÅXIT    ; FILE MUST BE ALSO CLOSED WHEN OPENING FAILS    LDA    #15        JSR    CLOSE    LDA    #0    JMP    (GONEPTR); SEND COMMAND TO A DRIVE;SENDÃOMMAND    ; CHECK THAT COMMAND'S LENGTH >0    ; THIS IS PROBABLY REDUNDANT CHECK    LDY    LENGTH    BEQ    SENDÃOMMANDÅXIT    LDA    #15    LDX    DEVICE    LDY    #15    JSR    SETLFS    LDA    LENGTH    LDX    #<PARAM    LDY    #>PARAM    JSR    SETNAM    JSR    OPEN    SEC    BCS    OPENÃOMMANDÅXITSENDÃOMMANDÅXIT    LDA    #0    JMP    (GONEPTR); READ A STRING FROM ERROR CHANNEL AND PRINT IT;READÅRROR    JSR    OPENÃOMMANDÃHANNEL    LDX    #15    ; LOGICAL FILE    JSR    CHKIN@PRTÅRR    JSR    CHRIN    CMP    #13    BEQ    @PREADÅRROR2    JSR    CHROUT    JMP    @PRTÅRR@PREADÅRROR2    JSR    CHROUT    ;LDA    #5    LDA    #15    JSR    CLOSE    JSR    CLRCHN    @PREADÅRRORÅXIT    LDA    #0    JMP    (GONEPTR); ÃHANGE DEFAULT DRIVE;CHANGEÄRIVE    LDA    PARAM+1    SEC    SBC    #"0"    STA    DEVICE    LDA    LENGTH    CMP    #2    BEQ    @CHANGEÄRIVE1    LDA    PARAM+2    CMP    #"0"    BCC    @CHANGEÄRIVE1    CMP    #":"    BCS    @CHANGEÄRIVE1    SEC    SBC    #"0"    PHA    LDA    DEVICE    ASL    ASL    CLC    ADC    DEVICE        ASL    STA    DEVICE    ; DEVICE = (DEVICE * 2 * 2 + DEVICE) * 2    PLA    CLC    ADC    DEVICE    STA    DEVICE@CHANGEÄRIVE1    LDA    #0    JMP    (GONEPTR)        ; GENERAL PRINT STRING ROUTINE; X=ADDRESS (LOW BYTE); Y=ADDRESS (HIGH BYTE); CHANGES A, X AND FLAGSPRINTÓTRING    STX    @PRINTÓTRING2+1    STY    @PRINTÓTRING2+2    LDX    #0@PRINTÓTRING2    LDA    READYTEXT,X    BEQ    @PRINTÅXIT    JSR    CHROUT    INX    SEC    BCS    @PRINTÓTRING2@PRINTÅXIT    RTSREADÄIR    LDA    #1    ; LOGICAL FILE    LDX    DEVICE    ; DEVICE NUMBER    LDY    #0    ; COMMAND    JSR    SETLFS    LDA    #1    ; LENGTH OF NAME    LDX    #<DIRNAME    LDY    #>DIRNAME    JSR    SETNAM    JSR    OPEN    BCS    @PREADÄIRÅRROR    ;JSR    READST    ;AND    #$FF    ;BNE    READÄIRÅRROR    LDX    #1    ; LOGICAL FILE    JSR    CHKIN    JSR    CHRIN    ; SKIP START ADDRESS    JSR    CHRIN@PREADÄIR1    JSR    CHRIN    ; SKIP 16-BIT LINK TO NEXT BASIC LINE    JSR    CHRIN    JSR    READST    AND    #$FF    BNE    @PREADÄIRÅXIT ; BRACH TO EXIT IF THERE WAS AN ERROR    JSR    CHRIN    ; READ BASIC LINE NUMBER    STA    BIN    JSR    CHRIN    STA    BIN+1; CONVERT BASIC LINE NUMBER TO BCD    JSR    BINÂÃÄ16; PRINT LINE NUMBER    JSR    PRINTÌINEÎUM; PRINT CHARACTERS UNTIL END OF LINE IS REACHED@PREADÄIR2    JSR    CHRIN    CMP    #0    BEQ    @PREADÄIRÅÏÌ    JSR    CHROUT    JMP    @PREADÄIR2; PRINT RETURN AT THE END OF LINE@PREADÄIRÅÏÌ    LDA    #13    JSR    CHROUT    JMP    @PREADÄIR1@PREADÄIRÅXIT    LDA    #1    JSR    CLOSE    JSR    CLRCHN@PREADÄIRÅRROR    LDA    #1    ; OPEN FAILED, BUT FILE MUST BE STILL CLOSED    JSR    CLOSE    LDA    #0    JMP    (GONEPTR);; PRINT 16-BIT LINE NUMBER;; SUPPRESS LEADING ZEROESPRINTÌINEÎUM    LDA    BCD+2    AND    #$0F    BNE    @LINEÎUM1    LDA    BCD+1    AND    #$F0    BNE    @LINEÎUM2    LDA    BCD+1    AND    #$0F    BNE    @LINEÎUM3    LDA    BCD+0    AND    #$F0    BNE    @LINEÎUM4    JMP    @LINEÎUM5; PRINT X0000@LINEÎUM1    ORA    #48    ; CONVERT TO PETSCII    JSR    CHROUT; PRINT X000@LINEÎUM2    ROR    ROR    ROR    ROR    AND    #$0F    ORA    #48    JSR    CHROUT; PRINT X00@LINEÎUM3    ORA    #48    JSR    CHROUT; PRINT X0@LINEÎUM4    ROR    ROR    ROR    ROR    AND    #$0F    ORA    #48    JSR    CHROUT; PRINT X@LINEÎUM5    LDA    BCD+0    AND    #$0F    ORA    #48    JSR    CHROUT; PRINT EXTRA SPACE    LDA    #32    JSR    CHROUT    RTS            ; CONVERT 16-BIT VALUE TO BCD;BINÂÃÄ16    SED        ; ÓWITCH TO DECIMAL MODE    LDA #0        ; ÅNSURE THE RESULT IS CLEAR    STA BCD+0    STA BCD+1    STA BCD+2    LDX #16        ; ÔHE NUMBER OF SOURCE BITS@CONVERTÂIT    ASL BIN+0    ; ÓHIFT OUT ONE BIT    ROL BIN+1    LDA BCD+0    ; ÁND ADD INTO RESULT    ADC BCD+0    STA BCD+0    LDA BCD+1    ; PROPAGATING ANY CARRY    ADC BCD+1    STA BCD+1    LDA BCD+2    ; ... THRU WHOLE RESULT    ADC BCD+2    STA BCD+2    DEX        ; ÁND REPEAT FOR NEXT BIT    BNE @CONVERTÂIT    CLD        ; ÂACK TO BINARY    RTS        ; ÁLL ÄONE.TITLE    .BYTE    "STURMDOS V1.0 INSTALLED",13,0RUNTEXT    .BYTE    "RUN",13,0    ; RUN COMMANDREADYTEXT .BYTE    13,"READY.",13,0DIRNAME    .BYTE    "$"
